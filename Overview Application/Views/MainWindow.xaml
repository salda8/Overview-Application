<Window x:Class="OverviewApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:ignore="http://www.ignore.com"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:OverviewApp.Auxiliary.Converters"
        Title="Managing Application"
        Width="800"
        Height="800"
        DataContext="{Binding Main,
                              Source={StaticResource Locator}}"
        Icon="../icon.ico"
        WindowState="Maximized"
        mc:Ignorable="d ignore">

    <Window.Resources>
       <converters:LogItemToColorConverter x:Key="LogColorConverter" />
        <converters:LogEventInfoToStringConverter x:Key="LogInfoToStringConverter" />
    </Window.Resources>

    <Grid x:Name="LayoutRoot">
        <DockPanel>
            <!--    -->
            <!--  Your application menu. You have default commands, and  -->
            <!--  you can add your own commands. They work like nomrmal  -->
            <!--  button commands, so you can reuse them  -->
            <!--    -->
            <Menu HorizontalAlignment="Left"
                  Background="White"
                  BorderBrush="Black"
                  DockPanel.Dock="Top"
                  IsTabStop="False">
                <!--  Default application commands:  -->
                <MenuItem Header="_Default commands" IsTabStop="False">
                    <MenuItem Command="ApplicationCommands.Copy" />
                    <MenuItem Command="ApplicationCommands.Cut" />
                    <MenuItem Command="ApplicationCommands.Paste" />
                </MenuItem>
                <!--  Our custom commands:  -->
                <!--  Note we're sending a string here, so in our main view model:  -->
                <!--    we'll have the command, of type RelayCommand<string>, and it        -->
                <!--  will send the message to the messanger. In the Random_VM, we  -->
                <!--  will subscribe to that event, and fire the Refresh people method  -->
                <MenuItem Header="_Custom commands" IsTabStop="False">
                    <MenuItem Command="{Binding OpenDatabaseSettingsCommand}" Header="Database Settings" />
                </MenuItem>
                <MenuItem Header="_Add New" IsTabStop="false">
                    <MenuItem Command="{Binding AddNewAccountCommand}" Header="Account"></MenuItem>
                    <MenuItem Command="{Binding AddNewStrategyCommand}" Header="Strategy"></MenuItem>
                </MenuItem>
                
            </Menu>
            <!--    -->
            <!--  StatusBar at the bottom.  Binds to a property on the main view  -->
            <!--  model. Whenever you want to set it, send a message to the  -->
            <!--  Messenger, and it'll update this. Look at the view model  -->
            <!--  constructor for more details  -->
            <!--    -->
            <StatusBar Height="30"
                       DockPanel.Dock="Bottom"
                       IsTabStop="False">
                <StatusBarItem HorizontalAlignment="Right">
                    <TextBlock Name="StatBarText"
                               Margin="0 0 30 0"
                               Text="{Binding StatusBarMessage}" />
                </StatusBarItem>
            </StatusBar>

            <!--    -->
            <!--  Last child fills the dockbar, so this will take  -->
            <!--  the "main" window and fill it.  -->
            <!--    -->

            <!--    Use this to quickly copy/paste a new tab:
				<TabItem Header=" ">
		
				</TabItem>
			-->
            <TabControl>

                <!--<TabItem Header="Summary">
                    <ContentControl Content="{Binding Summary_VM}" />
                </TabItem>-->
                <TabItem Header="Account">
                    <ContentControl Content="{Binding AccountVm}" />
                </TabItem>
                <!--<TabItem Header="Equity">
                    <ContentControl Content="{Binding Equity_VM}" />
                </TabItem>-->
                <TabItem Header="Candlestick">
                    <ContentControl Content="{Binding BarsVm}" />
                </TabItem>
                <TabItem Header="Matlab Value">
                    <ContentControl Content="{Binding MatlabValueVm}" />
                </TabItem>
                <TabItem Header="Strategy Launcher">
                    <ContentControl Content="{Binding StrategyVm}" />
                </TabItem>
                <TabItem Header="Close Trades">
                    <ContentControl Content="{Binding CloseTradesVm}" />

                </TabItem>
                <TabItem Header="Db Settings">
                    <!--<ContentControl Content="{Binding DatabaseConnection_VM}" />-->

                </TabItem>
                <TabItem Header="Log">
                <Grid Background="Transparent">
                    <ListBox x:Name="RequestListBox" ItemsSource="{Binding LogMessages}" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource LogInfoToStringConverter}}" Foreground="{Binding Converter={StaticResource LogColorConverter}}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                </Grid>
            </TabItem>


            </TabControl>
        </DockPanel>
    </Grid>

</Window>