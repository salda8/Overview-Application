<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:OverviewApp.Converters">

    <!--  Trying to avoid the validation errors that are outputed to the console when  -->
    <!--  a validation goes from invalid to valid.  -->
    <converters:ErrorContentConverter x:Key="ErrConv" />


    <!--  This is an Example of a story board with an animation, that will make the error  -->
    <!--  icon flash 3 times.   This Storyboard is used in the `myErrorTemplate` Style  -->
    <Storyboard x:Key="FlashErrorIcon">
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:00.7500000" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:01.5000000" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:02.2500000" Value="{x:Static Visibility.Visible}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:03.0000000" Value="{x:Static Visibility.Hidden}" />
            <DiscreteObjectKeyFrame KeyTime="00:00:03.7500000" Value="{x:Static Visibility.Visible}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <!--  This is an Example of a style that will add a red border and a flashing icon to  -->
    <!--  input fields if their validation fails  -->
    <!--  Control's that are based on this style in my case are: TextBox, CheckBox, ComboBox  -->
    <Style x:Key="MyErrorTemplate" TargetType="Control">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <Ellipse Width="18"
                                 Height="18"
                                 Margin="-25,0,0,0"
                                 DockPanel.Dock="Right"
                                 Fill="Red"
                                 StrokeThickness="1"
                                 ToolTip="{Binding ElementName=myControl,
                                                   Path=AdornedElement.(Validation.Errors),
                                                   Converter={StaticResource ErrConv}}">
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <GradientStop Offset="0" Color="#FFFA0404" />
                                    <GradientStop Offset="1" Color="#FFC9C7C7" />
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                    <BeginStoryboard Storyboard="{StaticResource FlashErrorIcon}" />
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                        <TextBlock Margin="-15,2,0,0"
                                   DockPanel.Dock="Right"
                                   FontSize="11pt"
                                   FontWeight="Bold"
                                   Foreground="White"
                                   ToolTip="{Binding ElementName=myControl,
                                                     Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            !
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                    <BeginStoryboard Storyboard="{StaticResource FlashErrorIcon}" />
                                </EventTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder Name="myControl" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors), Converter={StaticResource ErrConv}}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--
	<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip"
						Value="{Binding RelativeSource={x:Static RelativeSource.Self},
										Path=(Validation.Errors)[0].ErrorContent }"/>
			</Trigger>
		</Style.Triggers>
	
	<Ellipse DockPanel.Dock="Right"
								 ToolTip="{Binding ElementName=myControl,
									 Path=AdornedElement.(Validation.Errors)[0].ErrorContent,
									 Converter={StaticResource ErrConv}}"
								 Width="18" Height="18"
								 Margin="-25,0,0,0"
								 StrokeThickness="1" Fill="Red" >		
	

	-->

    <!--  The following styles are based on 'myErrorTemplate' which will  -->
    <!--  flash a red icon 3 times if the validation failes  -->
    <!--<Style TargetType="TextBox"  BasedOn="{StaticResource myErrorTemplate}" />-->
    <Style BasedOn="{StaticResource MyErrorTemplate}" TargetType="CheckBox" />
    <Style BasedOn="{StaticResource MyErrorTemplate}" TargetType="ComboBox" />


    <!--  The following styles are for setting a consistant look and feel  -->
    <!--  to your application  -->
    <Style x:Key="ImageStyleForButtons" TargetType="{x:Type Image}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="True">
                <Setter Property="Source" Value="/Auxiliary/Resources/1385_Disable_16x16_72.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Value="False">
                <Setter Property="Source" Value="/Auxiliary/Resources/1385_Disable_16x16_72_disabled.png" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MyDefaultBorderTemplate" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="BorderBrush" Value="Teal" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="MidnightBlue" />
    </Style>

    <Style x:Key="MyLabelTemplate" TargetType="Label">
        <Setter Property="Foreground" Value="Yellow" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="MyButtonTemplate" TargetType="Button">
        <Setter Property="Foreground" Value="DarkBlue" />
        <Setter Property="Background" Value="LightSteelBlue" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="MyTextBlockTemplate" TargetType="TextBlock">
        <Setter Property="Foreground" Value="LightGreen" />
        <Setter Property="Margin" Value="5 2" />
    </Style>
    <Style TargetType="Ellipse">
        <!--<Setter Property="Margin" Value="3" />-->
        <Setter Property="MaxHeight" Value="30" />
        <Setter Property="MaxWidth" Value="30" />
    </Style>
    <Style TargetType="Label">
        <Setter Property="MaxHeight" Value="50" />
        <Setter Property="MaxWidth" Value="80" />
    </Style>
    <Style TargetType="Button">
        <Setter Property="MaxWidth" Value="50" />
        <Setter Property="MaxHeight" Value="30" />
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="MaxHeight" Value="30" />
        <Setter Property="MaxWidth" Value="65" />
    </Style>
    <LinearGradientBrush x:Key="BrushDataGridHeaderBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FF1C7CB1" />
        <GradientStop Offset="1" Color="#FF004A83" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BrushDataGridHeaderMouseOverBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FF1C7CAF" />
        <GradientStop Offset="1" Color="#FF042A68" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BrushDataGridHeaderBorder" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FF1B577E" />
        <GradientStop Offset="1" Color="#FF083258" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BrushDataGridHeaderSortedBorder" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#B58801" />
        <GradientStop Offset="1" Color="#681900" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BrushDataGridHeaderSortedBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#C46007" />
        <GradientStop Offset="1" Color="#AF2600" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BrushDataGridSelected" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="#FF3E4854" />
        <GradientStop Color="#FF5D6670" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="BrushDataGridSelectedForeground" Color="#FFFFFF" />

    <LinearGradientBrush x:Key="BrushDataGridAltRowBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFE1FFEE" />
        <GradientStop Offset="0.992" Color="#FFC3F9DA" />
    </LinearGradientBrush>

    <Style x:Key="StyleHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder"
                                Grid.ColumnSpan="2"
                                Background="{StaticResource BrushDataGridHeaderSortedBackground}"
                                BorderBrush="{StaticResource BrushDataGridHeaderSortedBorder}"
                                BorderThickness="0,1,0,1" />
                        <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                        <Rectangle Grid.ColumnSpan="2"
                                   Width="1"
                                   HorizontalAlignment="Right"
                                   Fill="#AAC377" />
                        <Rectangle Grid.ColumnSpan="2"
                                   Width="1"
                                   Margin="0,0,1,0"
                                   HorizontalAlignment="Right"
                                   Fill="#425B10" />
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{StaticResource StyleHeaderGripper}" />
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{StaticResource StyleHeaderGripper}" />
                        <Path x:Name="SortArrow"
                              Grid.Column="1"
                              Width="8"
                              Height="6"
                              Margin="0,0,8,0"
                              VerticalAlignment="Center"
                              Data="M0,0 L1,0 0.5,1 z"
                              Fill="White"
                              RenderTransformOrigin="0.5,0.4"
                              Stretch="Fill"
                              Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource BrushDataGridHeaderMouseOverBackground}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource BrushDataGridHeaderBorder}" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="BackgroundBorder" Background="Transparent">
                        <ContentPresenter Margin="4,0,6,0" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{x:Null}" />
    </Style>

    <!--  DataGridRow  -->

    <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid x:Name="selectiveScrollingGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <DataGridCellsPresenter x:Name="dataGridCellsPresenter"
                                                    Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridRowHeader x:Name="dataGridRowHeader"
                                               Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                    Path=HeadersVisibility,
                                                                    Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                    ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
                            <Grid Name="Details"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  Background="Gray"
                                  Visibility="Collapsed">
                                <DataGridDetailsPresenter x:Name="dataGridDetailsPresenter" />
                            </Grid>
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DGR_Border" Property="Background" Value="{DynamicResource BlueWindow}" />
                            <!--<Setter Property="Foreground" TargetName="dataGridCellsPresenter" Value="White" />-->
                            <Setter TargetName="dataGridRowHeader" Property="Foreground" Value="White" />
                            <Setter TargetName="dataGridRowHeader" Property="FontSize" Value="15.333" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="DGR_Border" Property="TextElement.Foreground" Value="{StaticResource BrushDataGridSelectedForeground}" />
                            <Setter TargetName="dataGridDetailsPresenter" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="dataGridCellsPresenter" Property="FontSize" Value="14.667" />
                            <Setter TargetName="DGR_Border" Property="Background" Value="{DynamicResource BrushDataGridSelected}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataGrid  -->

    <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource BrushDataGridAltRowBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}">
                        <ScrollViewer Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="3"
                                                Background="{StaticResource BrushDataGridHeaderBackground}"
                                                BorderBrush="{StaticResource BrushDataGridHeaderBorder}"
                                                BorderThickness="0,1" />
                                        <Button Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                Path=RowHeaderActualWidth}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                OverridesDefaultStyle="True">
                                            <Button.Template>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid>
                                                        <Border Background="{StaticResource BrushDataGridHeaderBackground}"
                                                                BorderBrush="{StaticResource BrushDataGridHeaderBorder}"
                                                                BorderThickness="0,1">
                                                            <Path x:Name="Arrow"
                                                                  Width="11"
                                                                  Height="11"
                                                                  Margin="4"
                                                                  VerticalAlignment="Bottom"
                                                                  Data="M1,0 L1,1 0,1 z"
                                                                  Fill="#3000"
                                                                  Stretch="Fill" />
                                                        </Border>
                                                        <Rectangle Width="1"
                                                                   HorizontalAlignment="Right"
                                                                   Fill="#AAC377" />
                                                        <Rectangle Width="1"
                                                                   Margin="0,0,1,0"
                                                                   HorizontalAlignment="Right"
                                                                   Fill="#425B10" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <DataGridColumnHeadersPresenter Grid.Column="1" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />
                                        <!--
                                            JAIMER removed from above
                                            SourceScrollViewerName="DG_ScrollViewer"
                                        -->
                                        <ScrollContentPresenter Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <ScrollBar Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding Path=VerticalOffset,
                                                                   RelativeSource={RelativeSource TemplatedParent},
                                                                   Mode=OneWay}" />
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding Path=HorizontalOffset,
                                                                       RelativeSource={RelativeSource TemplatedParent},
                                                                       Mode=OneWay}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>